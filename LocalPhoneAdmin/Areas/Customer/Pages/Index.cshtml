@page
@model LocalPhoneAdmin.Areas.Customer.Pages.IndexModel
@using Microsoft.AspNetCore.Identity
@using LocalPhoneDomain.Areas.Identity.Data

@inject SignInManager<UserModel> SignInManager
@inject UserManager<UserModel> UserManager

@if (SignInManager.IsSignedIn(User))
{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    <h3>All customers</h3>

    <form asp-page="./Index" method="get">
        <div class="form-actions no-color text-right">
            <p>
                Find by phone number:
                <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                <input type="submit" value="Search" class="btn btn-primary" />
            </p>
        </div>
    </form>
    <form id="createNewForm" class="form-inline">
        <button id="createNew" type="submit" asp-page="Create" class="btn btn-primary">Create New</button>
    </form>
    <p></p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.PhoneNumberSort" asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.CustomerPaginatedList[0].PhoneNumber)
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="" asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.CustomerPaginatedList[0].FirstName)
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="" asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.CustomerPaginatedList[0].LastName)
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.CountryNameSort" asp-route-currentFilter="@Model.CurrentFilter">
                        Country @Html.DisplayNameFor(model => model.CustomerPaginatedList[0].Country.Name)
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.CustomerPaginatedList)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country.Name)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-phonenumber="@item.PhoneNumber">Edit</a> |
                    <a asp-page="./Details" asp-route-phonenumber="@item.PhoneNumber">Details</a> |
                    <a asp-page="./Delete" asp-route-phonenumber="@item.PhoneNumber">Delete</a>
                </td>
            </tr>
            }
        </tbody>
    </table>

    var prevDisabled = !Model.CustomerPaginatedList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.CustomerPaginatedList.HasNextPage ? "disabled" : "";

    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.CustomerPaginatedList.CurrentPageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.CustomerPaginatedList.CurrentPageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
}